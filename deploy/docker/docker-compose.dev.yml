version: '3.8'

services:
  # PostgreSQL Database
  postgresql:
    image: postgres:15-alpine
    container_name: udpchat_postgresql_dev
    environment:
      POSTGRES_DB: ${DB_NAME:-udpchat}
      POSTGRES_USER: ${DB_USER:-udpchat_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-udpchat_password}
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ../../server/db/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    ports:
      - "${DB_PORT:-5432}:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-udpchat_user} -d ${DB_NAME:-udpchat}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - udpchat_dev_network

  # Python UDP Server (development with volume mounting)
  server:
    build:
      context: ../../server
      dockerfile: Dockerfile
    container_name: udpchat_server_dev
    environment:
      - DB_HOST=postgresql
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-udpchat}
      - DB_USER=${DB_USER:-udpchat_user}
      - DB_PASSWORD=${DB_PASSWORD:-udpchat_password}
      - SERVER_IP=0.0.0.0
      - SERVER_PORT=9999
      - DEBUG=True
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - AI_MODE=${AI_MODE:-ollama}
    ports:
      - "${SERVER_PORT:-9999}:9999/udp"
    depends_on:
      postgresql:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ../../server:/app
      - server_storage_dev:/app/storage
    networks:
      - udpchat_dev_network
    command: ["python", "main.py", "start"]
    healthcheck:
      test: [ "CMD-SHELL", "python - <<'PY'\nimport socket,sys\ns=socket.socket(socket.AF_INET,socket.SOCK_DGRAM)\ns.settimeout(1)\ns.sendto(b'{}',( '127.0.0.1', 9999))\nprint('ok')\nPY" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Node.js WebSocket Connector (development with volume mounting)
  connector:
    build:
      context: ../../connector
      dockerfile: Dockerfile
    container_name: udpchat_connector_dev
    environment:
      - UDP_SERVER_HOST=server
      - UDP_SERVER_PORT=9999
      - WS_PORT=8000
      - INACTIVITY_TIMEOUT_MS=600000
    ports:
      - "${CONNECTOR_PORT:-8000}:8000"
    depends_on:
      server:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ../../connector:/app
      - /app/node_modules
    networks:
      - udpchat_dev_network
    command: ["npm", "run", "dev"]
    healthcheck:
      test: [ "CMD-SHELL", "wget -q -O- http://localhost:8000/ >/dev/null 2>&1 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # React Client (development with volume mounting)
  client:
    build:
      context: ../../client
      dockerfile: Dockerfile.dev
    container_name: udpchat_client_dev
    ports:
      - "${CLIENT_PORT:-3000}:3000"
    depends_on:
      connector:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ../../client:/app
      - /app/node_modules
    networks:
      - udpchat_dev_network
    command: ["npm", "run", "dev"]
    healthcheck:
      test: [ "CMD-SHELL", "wget -q -O- http://localhost:3000/ >/dev/null 2>&1 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data_dev:
    driver: local
  server_storage_dev:
    driver: local

networks:
  udpchat_dev_network:
    driver: bridge
