{{- if and (include "udpchat.isTesting" . | ne "true") .Values.monitoring.prometheus.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "udpchat.fullname" . }}-prometheus
  labels:
    {{- include "udpchat.labels" . | nindent 4 }}
    app.kubernetes.io/component: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "udpchat.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: prometheus
  template:
    metadata:
      labels:
        {{- include "udpchat.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:v2.45.0
          ports:
            - containerPort: 9090
          args:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus/'
            - '--web.console.libraries=/etc/prometheus/console_libraries'
            - '--web.console.templates=/etc/prometheus/consoles'
            - '--storage.tsdb.retention.time=200h'
            - '--web.enable-lifecycle'
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus
            - name: prometheus-storage
              mountPath: /prometheus
      volumes:
        - name: prometheus-config
          configMap:
            name: {{ include "udpchat.fullname" . }}-prometheus-config
        - name: prometheus-storage
          emptyDir: {}
{{- end }}
