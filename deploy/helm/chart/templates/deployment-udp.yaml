{{- if or (include "udpchat.isTesting" . | eq "true") (ne (include "udpchat.currentColour" .) "") }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "udpchat.name.udp" . }}
  labels:
    {{- include "udpchat.labels" . | nindent 4 }}
    app.kubernetes.io/component: udp-server
    {{- $col := include "udpchat.currentColour" . }}
    {{- if $col }}
    app.kubernetes.io/color: {{ $col }}
    {{- end }}
spec:
  replicas: {{ default 1 .Values.udp.replicas }}
  revisionHistoryLimit: {{ default 3 .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "udpchat.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: udp-server
      {{- if $col }}
      app.kubernetes.io/color: {{ $col }}
      {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{ default "25%" .Values.udp.updateStrategy.maxUnavailable | quote }}
      maxSurge: {{ default "25%" .Values.udp.updateStrategy.maxSurge | quote }}
  template:
    metadata:
      labels:
        {{- include "udpchat.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: udp-server
        {{- if $col }}
        app.kubernetes.io/color: {{ $col }}
        {{- end }}
        {{- with .Values.udp.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.udp.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ default "default" .Values.serviceAccountName | quote }}
      {{- if .Values.udp.hostNetwork }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
      securityContext:
        {{- toYaml (default dict .Values.podSecurityContext) | nindent 8 }}
      containers:
        - name: udp-server
          image: {{ include "udpchat.image.udp" . }}
          imagePullPolicy: {{ default "IfNotPresent" .Values.udp.imagePullPolicy }}
          ports:
            - name: udp
              containerPort: {{ default 9999 .Values.udp.port }}
              protocol: UDP
            {{- if .Values.udp.httpStatus.enabled }}
            - name: http-status
              containerPort: {{ default 8080 .Values.udp.httpStatus.port }}
              protocol: TCP
            {{- end }}
          env:
            {{- if .Values.udp.httpStatus.enabled }}
            - name: STATUS_PORT
              value: {{ default 8080 .Values.udp.httpStatus.port | quote }}
            {{- end }}
            {{- range $k, $v := (default dict .Values.udp.env) }}
            - name: {{ $k }}
              value: {{ $v | quote }}
            {{- end }}
          {{- if or .Values.existingAppSecret.enabled .Values.appSecret.enabled }}
          envFrom:
            - secretRef:
                name: {{ if .Values.existingAppSecret.enabled }}{{ .Values.existingAppSecret.name | quote }}{{ else }}{{ default "udpchat-app" .Values.appSecret.name | quote }}{{ end }}
          {{- end }}
          args:
          {{- range $a := (default list .Values.udp.args) }}
            - {{ $a | quote }}
          {{- end }}
          {{- if .Values.udp.httpStatus.enabled }}
          readinessProbe:
            httpGet:
              path: {{ default "/healthz" .Values.udp.httpStatus.path | quote }}
              port: {{ default 8080 .Values.udp.httpStatus.port }}
            initialDelaySeconds: {{ default 5 .Values.udp.readiness.initialDelaySeconds }}
            periodSeconds: {{ default 10 .Values.udp.readiness.periodSeconds }}
            timeoutSeconds: {{ default 2 .Values.udp.readiness.timeoutSeconds }}
            failureThreshold: {{ default 3 .Values.udp.readiness.failureThreshold }}
          livenessProbe:
            httpGet:
              path: {{ default "/healthz" .Values.udp.httpStatus.path | quote }}
              port: {{ default 8080 .Values.udp.httpStatus.port }}
            initialDelaySeconds: {{ default 15 .Values.udp.liveness.initialDelaySeconds }}
            periodSeconds: {{ default 20 .Values.udp.liveness.periodSeconds }}
            timeoutSeconds: {{ default 2 .Values.udp.liveness.timeoutSeconds }}
            failureThreshold: {{ default 3 .Values.udp.liveness.failureThreshold }}
          {{- end }}
          resources:
            {{- toYaml (default dict .Values.udp.resources) | nindent 12 }}
          securityContext:
            {{- toYaml (default dict .Values.containerSecurityContext) | nindent 12 }}
          volumeMounts:
            {{- with .Values.udp.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      volumes:
        {{- with .Values.udp.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      nodeSelector:
        {{- toYaml (default dict .Values.nodeSelector) | nindent 8 }}
      tolerations:
        {{- toYaml (default list .Values.tolerations) | nindent 8 }}
      affinity:
        {{- toYaml (default dict .Values.affinity) | nindent 8 }}
{{- end }}